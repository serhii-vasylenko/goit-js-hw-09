{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BJ,EAAAc,OAAOC,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAG3D,SAASa,EAAQJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3BJ,EAAAc,OAAOI,QAAQ,oBAAmCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CA3C1DJ,EAAAc,OAAOK,KAAK,CACVC,SAAS,EACTC,SAAU,SAGC,CACXC,cAAeC,SAASC,cAAc,SACtCC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGjCF,cAAcM,iBAAiB,UAAU,SAAAC,GAC5CA,EAAMC,iBAKN,IAHA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhB3B,MAAOgC,EAASL,EAATK,KACnBC,EAAeC,OAAOH,EAAMI,OAEvBC,EAAI,EAAGA,GAAKN,EAAOK,MAAOC,IACjCtC,EAAcsC,EAAGH,GACdI,MAAK,SAAA5B,G,OAAyBD,EAAU,CAAET,SAA1BU,EAARV,SAA4CC,MAA7BS,EAALT,O,IAClBsC,OAAM,SAAA7B,G,OAAyBI,EAAQ,CAAEd,SAAxBU,EAARV,SAA0CC,MAA3BS,EAALT,O,IACtBiC,GAAgBC,OAAOF,EAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  useIcon: false,\n  fontSize: '16px',\n});\n\nconst refs = {\n  formContainer: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formContainer.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { amount, delay, step } = event.target.elements;\n  let currentDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => onSuccess({ position, delay }))\n      .catch(({ position, delay }) => onError({ position, delay }));\n    currentDelay += Number(step.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","init","useIcon","fontSize","formContainer","document","querySelector","delayInput","stepInput","amountInput","addEventListener","event","preventDefault","_elements","target","elements","amount","delay1","step","currentDelay","Number","value","i","then","catch"],"version":3,"file":"03-promises.a6e3221c.js.map"}